
Binary Tree 

1) Serialize and deserialize BST
2) We are given a binary tree and we have to print the tree level wise from bottom right to the root.
3) Depth of BST
4) InOrder traversal without recursion
5) Create BST from sorted Array (easy) , sorted Linked List (hard) , DLL (very hard)
6) You have a BST and int value(take it to be variable val). 
You need to print our all possible paths in the BST which sum to val, they may or may not start at the root.
7) Find LCA
8) Find heigt
9) Is given binary tree A complete binary tree
10) find successor / predecessor


Use Checked { } block if you want to capture overflow exceptions
To convert characters to integers subtract them from their starting character. for example, to convert '5' to 5 . Subtract '0' from '5' 


String Manipulation
* Approach the problem from backwards 
* use character pointers to manipulate string inplace
	unsafe
	{
		// Must pin object on heap so that it doesn't gets relocated by garbage collector 
		fixed (char* start = "Sample String")
		{
			// Create another pointer allow incrementation 
			char* left = start;
			...
		}
	}


Programming Interview Preparation – Week 1

Start your Week 1 with going through your favorite Data Structures and Algorithms book. Then move on to practice following questions.

Implement binary search on a sorted array.
Rotate an array by integer N.
Find smallest common number in three sorted arrays.
Remove duplicate characters from a string.
Reverse order of words in a sentence.
Reverse a singly linked list.
Merge two sorted linked lists.
Implement iterative in-order traversal of a binary tree.
Validate if two binary trees are identical.
Print perimeter of a binary tree.
Implement stack using queues.Find square root of a real number.
Programming Interview Preparation – Week 2

Practice more problems during Week 2.

Implement integer division without using division or multiplication operators.
Find all palindromic substrings in a given string.
Find an element in a rotated array that was originally sorted.
Find sub-array with largest sum in an integer array.
Reverse even nodes in a linked list i.e. a->b->c->d->e becomes a->d->c->b->e.
Implement deep copy of a singly linked list where node’s structure has an additional arbitrary pointer(pointing to any node in the linked list).
Find nth highest number in a binary search tree.
Implement level order traversal of a binary tree.
Implement clone(deep copy) of a graph.
Programming Interview Preparation – Week 3

Practice even more problems during Wee 3.

Find all permutations of a given string.
Find all possible combinations of a given string.
Find number of ways to make change of given amount using coins of given denominations (coin changing problem).
Find number of ways to make a given score in a game (like baseball) where a player can score 1, 2, or 4 runs).
Sort two arrays of ‘n’ nuts and ‘n’ bolts. Nuts can be compared with bolts and vice versa. A nut can’t be compared with another nut and a bolt can’t be compared with another bolt.
Implement serialization and de-serialization of a binary tree.
Determine if a string can be segmented into valid dictionary words.
Implement regular expression matching.
Implement boggle game.
Implement LRU cache.

  //int N = Convert.ToInt32(Console.ReadLine());

            int N = 123456789;

            int i = 1;
            while (true)
            {
                int temp = i;
                int index = 0;

                double sum = 0;
                while (temp > 0)
                {
                    if ((temp & 1) == 1)
                    {
                        sum = sum + (Math.Pow(10, index));
                    }
                    temp = temp >> 1;
                    index++;
                }

                if (sum % N == 0)
                {
                    Console.WriteLine(sum);
                    break;
                }

                i++;
            }
